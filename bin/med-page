#!/usr/bin/env node

var os = require('os')
var path = require('path')
var fs = require('fs-extra')
var exists = fs.existsSync
var program = require('./med')
var render = require('consolidate').handlebars.render
var download = require('download-git-repo')
var chalk =require("chalk");
var less = require("less");

program
	.option('-l, --list', '是否为列表视图');
program.parse(process.argv);

console.log()
process.on('exit', function () {
  console.log()
})

var name = program.args && program.args[0];
var list = program.list;
var pageFolder = path.resolve('./pages');
var source = path.resolve(__dirname + '/../source/page'),
	dest = path.resolve("./pages/" + name);

if (typeof(Date.prototype.format) === "undefined") {
	Date.prototype.format = function (format) {
		var date = {
			"M+": this.getMonth() + 1,
			"d+": this.getDate(),
			"h+": this.getHours(),
			"m+": this.getMinutes(),
			"s+": this.getSeconds(),
			"q+": Math.floor((this.getMonth() + 3) / 3),
			"S+": this.getMilliseconds()
		};
		if (/(y+)/i.test(format)) {
			format = format.replace(RegExp.$1, (this.getFullYear() + '')
				.substr(4 - RegExp.$1.length));
		}
		for (var k in date) {
			if (new RegExp("(" + k + ")")
				.test(format)) {
				format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? date[k] : ("00" + date[k])
					.substr(("" + date[k]).length));
			}
		}
		return format;
	}
}


/**
 * [noop description]
 * @return {[type]} [description]
 */
function noop() {
	return false;
}

function run () {
	create();
}

/**
 * 创建页面文件
 * @return {[type]} [description]
 */
function create() {
	if (!exists(pageFolder)) {
		console.error(chalk.yellow('创建 pages 文件夹'));
	}

	fs.copy(path.resolve(source, 'page'), dest, {
		filter: function(src) {
			return list || !src.match(/list\.(js|html)/);
		}
	}, function(err) {
		fs.move(path.resolve(dest, "index.js"), path.resolve(dest, name +'.js'), {
			overwrite: true
		}, function() {
			parse(path.resolve(dest, name +'.js'));
		})

		fs.move(path.resolve(dest, "_style.less"), path.resolve(dest, 'style.less'), {
			overwrite: true
		}, function(){
			// less 编译
			
		});

		var htmlFile = path.resolve(name+".html")
		fs.copySync(path.resolve(source, 'page.html'), htmlFile);
		parse(htmlFile)

		console.info(chalk.green("完成新建页面: "+name));
	});
}

/**
 * 渲染部分模板
 * @param  {string} file 文件路径
 * @return {[type]}      [description]
 */
function parse(file) {
	var str = fs.readFileSync(file, 'utf8');

	// outputFileSync
	if (str) {
	    render(str, {
	    	name: name,
	    	date: new Date().format("yyyy-MM-dd hh:mm"),
	    	view: list ? 'ListView': 'BaseView'
	    }, function (err, res) {
	    	if (!err) {
		    	fs.outputFileSync(file, res);
	    	} else {
	    		console.log(chalk.red(err));
	    	}
	    })
	}
}

run();